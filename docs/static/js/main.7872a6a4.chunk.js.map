{"version":3,"sources":["auth/AuthContext.js","auth/authReducer.js","components/LoginScreen.js","components/AboutScreen.js","components/HomeScreen.js","components/Navbar.js","router/AdminRoutes.js","router/PrivateRoute.js","router/PublicRoute.js","router/RouterApp.js","App.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","LoginScreen","console","log","dispatch","useContext","onClick","AboutScreen","HomeScreen","Navbar","to","AdminRoutes","location","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","RouterApp","auth","query","useQuery","pathname","get","URLSearchParams","useLocation","search","App","useReducer","Provider","value","ReactDOM","render","document","getElementById"],"mappings":"8MAEaA,EAAcC,0B,OCFdC,EACJ,eADIA,EAEH,gBAGGC,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACjD,OAAQA,EAAOC,MACb,KAAKJ,EACH,OAAO,2BACFG,EAAOE,SADZ,IAEEC,QAAQ,IAEZ,KAAKN,EACH,MAAO,CACLM,QAAQ,GAEZ,QACE,OAAOJ,I,OCbAK,EAAc,WACzBC,QAAQC,IAAI,SAEZ,IAAQC,EAAaC,qBAAWb,GAAxBY,SASR,OACE,gCACE,8CACA,wBAAQE,QAVQ,WAIlBF,EAHe,CACbN,KAAMJ,KAQN,uBCjBOa,EAAc,WAEzB,OADAL,QAAQC,IAAI,SAEV,8BACE,iDCJOK,EAAa,WAExB,OADAN,QAAQC,IAAI,QAEV,8BACE,gD,OCDOM,EAAS,WAEpB,IAAQL,EAAaC,qBAAWb,GAAxBY,SASR,OACE,+BACE,6BACE,cAAC,IAAD,CAAMM,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,eAAT,qBAEF,6BACE,wBAAQJ,QAhBO,WAInBF,EAHe,CACbN,KAAMJ,KAcJ,0BCnBKiB,EAAc,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC3B,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,CAAQA,SAAWA,EAAnB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAYR,IACvC,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,UAAYP,IAClC,cAAC,IAAD,CAAUE,GAAG,a,0CCVRM,EAAe,SAAC,GAItB,IAHLC,EAGI,EAHJA,gBACWC,EAEP,EAFJH,UACGI,EACC,iBACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEJ,UAAW,SAACK,GAAD,OACTH,EAAkB,cAACC,EAAD,eAAeE,IAAY,cAAC,IAAD,CAAUV,GAAG,sB,kCCTrDW,EAAc,SAAC,GAIrB,IAHLJ,EAGI,EAHJA,gBACWC,EAEP,EAFJH,UACGI,EACC,iBACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEJ,UAAW,SAACK,GAAD,OACRH,EAA6C,cAAC,IAAD,CAAUP,GAAG,MAAxC,cAACQ,EAAD,eAAeE,SCC7BE,EAAY,WAEvB,IAAQC,EAASlB,qBAAWb,GAApB+B,KAEJC,EAAQC,IAEZ,OAEI,8BAGE,eAAC,IAAD,CAAQb,SAAW,CAAEc,SAAS,IAAD,OAAMF,EAAMG,IAAI,SAAW,KAAxD,UACE,cAAC,EAAD,CAAab,KAAK,SAASD,OAAK,EAACI,gBAAkBM,EAAKvB,OAASe,UAAYd,IAC7E,cAAC,EAAD,CAAca,KAAK,IAAIG,gBAAkBM,EAAKvB,OAASe,UAAYJ,UAQvEc,EAAW,WACf,OAAO,IAAIG,gBAAgBC,cAAcC,SC7B9BC,EAAM,WAIjB,MAAyBC,qBAAWrC,EAAa,CAAEK,QAAQ,IAA3D,mBAAOuB,EAAP,KAAanB,EAAb,KAEA,OACE,cAACZ,EAAYyC,SAAb,CAAsBC,MAAO,CAAEX,OAAMnB,YAArC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,S,MCRR+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7872a6a4.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext()","export const types = {\r\n  LOGIN: '[AUTH] LOGIN',\r\n  LOGOUT: '[AUTH] LOGOUT',\r\n}\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.LOGIN:\r\n      return {\r\n        ...action.payload,\r\n        logged: true\r\n      }\r\n    case types.LOGOUT:\r\n      return {\r\n        logged: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../auth/AuthContext'\r\nimport { types } from '../auth/authReducer'\r\n\r\nexport const LoginScreen = () => {\r\n  console.log('login')\r\n\r\n  const { dispatch } = useContext(AuthContext)\r\n\r\n  const handleLogin = () => {\r\n    const action = {\r\n      type: types.LOGIN\r\n    }\r\n    dispatch(action)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login Screen</h1>\r\n      <button onClick={handleLogin}>\r\n        Login\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const AboutScreen = () => {\r\n  console.log('about')\r\n  return (\r\n    <div>\r\n      <h1>About Screen</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const HomeScreen = () => {\r\n  console.log('home')\r\n  return (\r\n    <div>\r\n      <h1>Home Screen</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AuthContext } from '../auth/AuthContext'\r\nimport { types } from '../auth/authReducer'\r\n\r\nexport const Navbar = () => {\r\n\r\n  const { dispatch } = useContext(AuthContext)\r\n\r\n  const handleLogout = () => {\r\n    const action = {\r\n      type: types.LOGOUT\r\n    }\r\n    dispatch(action)\r\n  }\r\n\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/?page=about\">About</Link>\r\n      </li>\r\n      <li>\r\n        <button onClick={ handleLogout }>\r\n          Logout\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { AboutScreen } from './../components/AboutScreen';\r\nimport { HomeScreen } from './../components/HomeScreen';\r\nimport { Navbar } from './../components/Navbar';\r\n\r\nexport const AdminRoutes = ({location}) => {\r\n  return (\r\n    <>\r\n      <Navbar/>\r\n      <Switch location={ location }>\r\n        <Route exact path=\"/about\" component={ AboutScreen } />\r\n        <Route exact path=\"/\" component={ HomeScreen } />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route \r\n      {...rest}\r\n      component={(props) => \r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/?page=login\" />\r\n      }\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route \r\n      {...rest}\r\n      component={(props) => \r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport {\r\n  Switch,\r\n  useLocation\r\n} from 'react-router-dom'\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { LoginScreen } from '../components/LoginScreen';\r\nimport { AdminRoutes } from './AdminRoutes';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n// import { RouterQuery } from './RouterQuery';\r\n\r\nexport const RouterApp = () => {\r\n\r\n  const { auth } = useContext(AuthContext)\r\n\r\n  let query = useQuery()\r\n  \r\n  return (\r\n    \r\n      <div>\r\n\r\n        {/* <RouterQuery page={ query.get('page') } /> */}\r\n        <Switch location={ { pathname: `/${query.get('page') || ''}` } }>\r\n          <PublicRoute path=\"/login\" exact isAuthenticated={ auth.logged } component={ LoginScreen } />\r\n          <PrivateRoute path=\"/\" isAuthenticated={ auth.logged } component={ AdminRoutes } />\r\n        </Switch>\r\n        \r\n      </div>\r\n    \r\n  )\r\n}\r\n\r\nconst useQuery = () => {\r\n  return new URLSearchParams(useLocation().search)\r\n}\r\n\r\n","import React, { useReducer } from 'react'\r\nimport { RouterApp } from './router/RouterApp'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { authReducer } from './auth/authReducer';\r\nimport { AuthContext } from './auth/AuthContext';\r\n\r\nexport const App = () => {\r\n\r\n  // const init = { logged: false }\r\n\r\n  const [auth, dispatch] = useReducer(authReducer, { logged: false })\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ auth, dispatch }}>\r\n      <BrowserRouter>\r\n        <RouterApp />\r\n      </BrowserRouter>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nimport './style.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}